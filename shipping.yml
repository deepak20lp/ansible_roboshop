- name: create shipping
  hosts: shipping
  become: yes
  tasks: 
  - name: install maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check roboshop
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true

  - name: create user roboshop
    ansible.builtin.user:
      name: roboshop
    when: out.rc != 0

  - name: check
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: create app dir
    ansible.builtin.file:
      path: /app
      state: directory
    when: directory.stat.exists == false

  - name: get url
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: unzip
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven 
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app
    
  - name: move targets
    ansible.builtin.shell: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: demon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: star and enable
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  - name: install mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load data
    ansible.builtin.shell: mysql -h mysql.deepakreddy.online -uroot -pRoboShop@1 < /app/db/schema.sql
  - name: load data1
    ansible.builtin.shell: mysql -h mysql.deepakreddy.online -uroot -pRoboShop@1 < /app/db/app-user.sql 
  - name: load data2
    ansible.builtin.shell: mysql -h mysql.deepakreddy.online -uroot -pRoboShop@1 < /app/db/master-data.sql
  
  - name: restart
    ansible.builtin.service:
      name: shipping
      state: restarted
  


   
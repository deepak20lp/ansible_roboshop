- name: installin catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: setup npm source
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: check user roboshop exists docker network create --driver overlay your-overlay-network
    ansible.builtin.command: "id roboshop"
    register: out
    ignore_errors: true

  - name: create user 
    ansible.builtin.user:
      name: roboshop
    when: out.rc != 0

  - name: check if direc is set or not 
    ansible.builtin.stat:
      path: /app
    register: directoryy

  - name: verify
    ansible.builtin.debug:
      msg: "{{directoryy}}"

  - name: create directoryy
    ansible.builtin.file:
      path: /app
      state: directory
    when: directoryy.stat.exists == false

  - name: download code (from http)
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract artifact
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: npm install
    ansible.builtin.command: npm
    args:
      chdir: /app

  - name: cpoy the catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: demon reload in ansible
    ansible.builtin.systemd_service:
    daemon_reload: true

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copy mongo repo to yum.repos.d
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install MongoDB
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: load data
    ansible.builtin.command: mongo --host MONGODB-SERVER-IPADDRESS </app/schema/catalogue.js


  




